@model IEnumerable<VoxConnex.Models.QuoteQuestionnaire>

@{
    ViewBag.Title = "Index";
}

<style>
    a.selected {
        background-color: #1F75CC;
        color: white;
        z-index: 100;
    }

    .messagepop {
        background-color: #FFFFFF;
        border: 1px solid #999999;
        cursor: default;
        display: none;
        margin-top: 15px;
        position: absolute;
        text-align: left;
        width: 394px;
        z-index: 50;
        padding: 25px 25px 20px;
    }

    label {
        display: block;
        margin-bottom: 3px;
        padding-left: 15px;
        text-indent: -15px;
    }

    .messagepop p, .messagepop.div {
        border-bottom: 1px solid #EFEFEF;
        margin: 8px 0;
        padding-bottom: 8px;
    }
</style>


<script>
    $(document).ready(function () {


        $(".name").colorbox({ inline: true, width: "50%" });

        $(".name").on("click", function () {

            var content = $(this).text();

            $("#inline_content").html(content);

        });

    });
</script>


<div>
    <span> <a class='name' href="#inline_content"> Welcome! </a> </span>
    <span> <a class='name' href="#inline_content"> User  </a> </span>
</div>

<div style='display:none'>
    <div id='inline_content' style='padding:10px; background:#fff;'>

    </div>
</div>

<table class="table">
    <tr>
        <th scope="col">
            @Html.DisplayNameFor(model => model.HowManyUsers)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.NeedPhones)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NeedNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HowManyNumbersPorting)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HowManyLocations)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContactName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Zipcode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AcceptTerms)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.HowManyUsers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NeedPhones)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NeedNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HowManyNumbersPorting)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HowManyLocations)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zipcode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AcceptTerms)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
